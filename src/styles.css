
.App {
  font-family: sans-serif;
  text-align: center;
}

const Wrapper = styled.div`
  background-color: #3b4a54;
  color: white;
  padding: 16px;
`;

const Button = styled.button`
  background-color: transparent;
  border: none;
  cursor: pointer;
  fill: white;
  padding: 8px;
  transition: transform 0.3s;

  &:hover {
    transform: scale(1.2);
  }
`;

const Message = styled.div`
  display: flex;
  align-items: flex-start;
  margin-bottom: 8px;

  &.sent {
    justify-content: flex-end;
  }

  &.received {
    justify-content: flex-start;
  }

  .message-content {
    background-color: #00a884;
    padding: 8px;
    border-radius: 8px;
    color: white;
    margin-right: 8px;
    position: relative;
    cursor: pointer;
    transition: background-color 0.3s;

    &:hover {
      background-color: #00c49d;
    }
  }

  .status {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: ${({ isViewed }) => (isViewed ? '#00a884' : '#aaa')};
  }
`;

// Componente principal
class ChatApp extends React.Component {
  // ...

  render() {
    // ...

    return (
      <Wrapper>
        {messages.map((message, index) => (
          <Message
            key={index}
            isSent={message.isSent}
            isViewed={message.isViewed}
          >
            <div className="message-content">{message.content}</div>
            <div className="status" />
          </Message>
        ))}
        <Button onClick={this.handleButtonClick}>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
        <path d="M374.6 86.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 178.7l-57.4-57.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l160-160zm96 128c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 402.7 86.6 297.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l128 128c12.5 12.5 32.8 12.5 45.3 0l256-256z" />
      </svg>
        </Button>
      </Wrapper>
    );
  }
}
